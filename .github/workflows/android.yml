name: Android CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
#  build:
#
#    runs-on: macos-latest
#
#    strategy:
#      matrix:
#        java-version: ['17']
#
#    steps:
#    - uses: actions/checkout@v4
#    - name: set up JDK 17
#      uses: actions/setup-java@v4
#      with:
#        java-version: ${{matrix.java-version}}
#        distribution: 'temurin'
#        cache: gradle
#
#    - name: Grant execute permission for gradlew
#      run: chmod +x gradlew
#    - name: Build with Gradle
#      run: ./gradlew build

#  lint:
#    runs-on: ubuntu-latest
#
#    strategy:
#      matrix:
#        java-version: [ '17' ]
#
#
#    steps:
#      - name: Checkout the code
#        uses: actions/checkout@v4
#
#      - uses: actions/setup-java@v4
#        with:
#          java-version: ${{matrix.java-version}}
#          distribution: 'temurin'
#          cache: gradle
#
#      - run: ./gradlew app:lintReportDebug
#
#      - uses: actions/upload-artifact@v4
#        with:
#          name: lint-result.html
#          path: app/build/reports/lint-results-debug.html

#  unit-test:
#    needs: [lint]
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v4
#      - uses: actions/setup-java@v4
#        with:
#          java-version: '17'
#          distribution: 'temurin'
#          cache: 'gradle'
#      - run: ./gradlew test
#
#      - uses: actions/upload-artifact@v4
#        with:
#          name: unit_test_report
#          path: app/build/reports/tests/testDebugUnitTest/

  instrumentation-test:
#    needs: [unit-test]
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'gradle'
#      - uses: reactivecircus/android-emulator-runner@v2
#        with:
#          api-level: 29
#          script: ./gradlew assembleDebug
      - run: ./gradlew assembleDebug
      - uses: actions/upload-artifact@v2
        with:
          name: apk
          path: app/build/outputs/apk/debug/app-debug.apk

  automation-test:
    needs: [instrumentation-test]

    runs-on: macos-latest

    steps:

      - run: ls -a
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'gradle'
      - uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 29
          force-avd-creation: false
          disable-animations: true
          script: ./gradlew connectedCheck

      #      - uses: actions/download-artifact@v4
#        with:
#          name: app-debug.apk
#          repository: TranhGio/CI-Experiment
#          github-token: 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

      - name: Download artifact
        id: download-artifact
        uses: dawidd6/action-download-artifact@v3

      - uses: actions/checkout@v4
        with:
          repository: TranhGio/CI-Experiment-Automation
          ref: main
          path: CI-Experiment-Automation
      - name: Display all file structure of downloaded files
        run: ls -R
      - name: Moving the apk to object folder of Automation
        run: mv apk/app-debug.apk CI-Experiment-Automation/object/
      - name: Display all file structure of downloaded files after moving file
        run: ls -R
      - run: cd CI-Experiment-Automation
      - uses: actions/setup-node@v3
        with:
          cache: 'npm'
      - run: npm install
      - run: npm run wdio